CHIP P2S {
    IN indata[4], enable, load;
    OUT sout, complete;

    PARTS:

    Bit(in=indata[0], load=load, out=d0);
    Bit(in=indata[1], load=load, out=d1);
    Bit(in=indata[2], load=load, out=d2);
    Bit(in=indata[3], load=load, out=d3);
    Bit(in=nextS, load=true, out=s);
    Bit(in=nextB0, load=true, out=b0);
    Bit(in=nextB1, load=true, out=b1);
    And(a=b0, b=b1, out=last);
    And(a=last, b=s, out=done);
    Bit(in=done, load=true, out=prevDone);
    Not(in=prevDone, out=nPrevDone);
    And(a=done, b=nPrevDone, out=complete);
    Not(in=s, out=ns);
    And(a=enable, b=ns, out=start);
    Not(in=done, out=ndone);
    And(a=s, b=ndone, out=cont);
    Or(a=start, b=cont, out=nextS);
    Xor(a=b0, b=s, out=incB0);
    And(a=b0, b=s, out=carryB0);
    Xor(a=b1, b=carryB0, out=incB1);
    Mux(a=b0, b=incB0, sel=s, out=tmpB0);
    Mux(a=tmpB0, b=false, sel=start, out=nextB0);
    Mux(a=b1, b=incB1, sel=s, out=tmpB1);
    Mux(a=tmpB1, b=false, sel=start, out=nextB1);
    Mux(a=d0, b=d1, sel=b0, out=m0);
    Mux(a=d2, b=d3, sel=b0, out=m1);
    Mux(a=m0, b=m1, sel=b1, out=bitSel);
    And(a=bitSel, b=s, out=sout);
}
